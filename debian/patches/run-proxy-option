Allow to run kimchi without proxy by default.

--- a/src/kimchi.conf.in
+++ b/src/kimchi.conf.in
@@ -3,6 +3,9 @@
 #
 
 [server]
+# Start the proxy service?
+#run_proxy = off
+
 # Hostname or IP address to listen on
 #host = 0.0.0.0
 
--- a/src/kimchi/config.py.in
+++ b/src/kimchi/config.py.in
@@ -289,6 +289,7 @@
 def _get_config():
     config = SafeConfigParser()
     config.add_section("server")
+    config.set("server", "run_proxy", "off")
     config.set("server", "host", "0.0.0.0")
     config.set("server", "port", "8000")
     config.set("server", "ssl_port", "8001")
--- a/src/kimchi/proxy.py
+++ b/src/kimchi/proxy.py
@@ -29,7 +29,7 @@
 
 from kimchi import sslcert
 from kimchi.config import paths
-
+import kimchi.config as config
 
 def _create_proxy_config(options):
     """Create nginx configuration file based on current ports config
@@ -68,6 +68,9 @@
             with open(key, "w") as f:
                 f.write(ssl_gen.key_pem())
 
+    if config.config.get("server", "run_proxy") == 'off':
+        return
+
     # Setting up Diffie-Hellman group with 2048-bit file
     dhparams_pem = os.path.join(config_dir, "dhparams.pem")
 
@@ -93,6 +96,9 @@
 def start_proxy(options):
     """Start nginx reverse proxy."""
     _create_proxy_config(options)
+    if config.config.get("server", "run_proxy") == 'off':
+        return
+
     nginx_config_dir = paths.nginx_conf_dir
     config_file = "%s/kimchi.conf" % nginx_config_dir
     cmd = ['nginx', '-c', config_file]
@@ -101,5 +107,8 @@
 
 def terminate_proxy():
     """Stop nginx process."""
+    if config.config.get("server", "run_proxy") == 'off':
+        return
+
     term_proxy_cmd = ['nginx', '-s', 'stop']
     subprocess.call(term_proxy_cmd)
